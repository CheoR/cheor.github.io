{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-pug-index-mdx-2b15f041279e563cbedd.js","mappings":"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","sources":["webpack://cheor-portfolio/./node_modules/@mui/material/Link/linkClasses.js","webpack://cheor-portfolio/./node_modules/@mui/material/Link/getTextDecoration.js","webpack://cheor-portfolio/./node_modules/@mui/material/Link/Link.js","webpack://cheor-portfolio/./blog/pug/index.mdx","webpack://cheor-portfolio/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://cheor-portfolio/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Bark \", React.createElement(_components.em, null, \"bark\"), \" \", React.createElement(_components.strong, null, \"bark\"), \" bark bark!\"), \"\\n\", React.createElement(_components.p, null, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus laoreet sem ex, ac rhoncus lectus aliquet vitae. Phasellus convallis sed augue id rutrum. Duis pharetra metus leo. Etiam mattis elit vel aliquet sollicitudin. Pellentesque vel velit consectetur magna efficitur consectetur. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aliquam erat volutpat. Vivamus quis tellus quis ligula mollis placerat id laoreet elit. Nulla sollicitudin ornare consectetur. Mauris leo lorem, cursus nec laoreet eu, lobortis et diam. Duis pretium ex magna, ac efficitur diam ultrices et. Nullam aliquam vestibulum vestibulum.\\nTaco.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/cheo/workspace/portfolio/cheor.github.io/blog/pug/index.mdx\";\nimport React from \"react\";\nimport {getImage, GatsbyImage} from \"gatsby-plugin-image\";\nimport {graphql} from \"gatsby\";\nimport {Box, Link, Typography} from \"@mui/material\";\nimport {SEO} from \"../../components/SEO\";\nimport Layout from \"../../components/Layout\";\nconst BlogPost = ({data, children}) => {\n  const {frontmatter: fm} = data.mdx;\n  const image = getImage(fm.hero_image);\n  return React.createElement(Layout, null, React.createElement(Box, null, React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    }\n  }, React.createElement(GatsbyImage, {\n    image: image,\n    alt: fm.hero_image_alt\n  })), React.createElement(Box, {\n    component: \"p\",\n    align: \"center\"\n  }, React.createElement(Typography, {\n    variant: \"caption\"\n  }, \"Photo Credit:\", \" \", React.createElement(Link, {\n    \"aria-label\": fm.hero_image_credit_text,\n    color: \"inherit\",\n    href: fm.hero_image_credit_link,\n    rel: \"noreferrer\",\n    target: \"_blank\",\n    underline: \"hover\"\n  }, fm.hero_image_credit_text))), React.createElement(Typography, {\n    variant: \"subtitle2\"\n  }, fm.datePublished), React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      gap: 1\n    }\n  }, fm.tags.map(tag => React.createElement(Typography, {\n    key: tag,\n    variant: \"subtitle1\"\n  }, \"#\", tag))), children));\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        slug\n        datePublished(formatString: \"MMMM D, YYYY\")\n        hero_image_alt\n        hero_image_credit_link\n        hero_image_credit_text\n        tags\n        hero_image {\n          childImageSharp {\n            gatsbyImageData(\n              width: 600\n              placeholder: BLURRED\n              formats: [AUTO, WEBP, AVIF]\n            )\n          }\n        }\n      }\n      body\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(SEO, {\n  title: data.mdx.frontmatter.title,\n  description: `Blog about ${data.mdx.frontmatter.title}`,\n  image: data.mdx.frontmatter.hero_image\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","error","theme","ownerState","transformedColor","color","transformDeprecatedColors","channelColor","_excluded","LinkRoot","styled","Typography","name","overridesResolver","props","styles","root","capitalize","underline","component","button","textDecoration","textDecorationColor","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","variant","sx","other","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","event","current","Object","keys","includes","Array","isArray","_createMdxContent","_components","assign","p","em","strong","_provideComponents","components","React","wrapper","MDXLayout","BlogPost","_ref","data","children","frontmatter","fm","mdx","image","getImage","hero_image","Layout","Box","display","justifyContent","GatsbyImage","alt","hero_image_alt","align","Link","hero_image_credit_text","href","hero_image_credit_link","rel","target","datePublished","gap","tags","map","tag","key","Head","_ref2","SEO","title","description","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}