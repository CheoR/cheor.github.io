{"version":3,"file":"component---src-pages-blog-index-js-dffaf6486c9227f3be38.js","mappings":"mVAiFA,EAtEiB,SAACA,GAAW,IAAD,cACpBC,GAAQC,EAAAA,EAAAA,GAAQ,UAACF,EAAMG,YAAP,aAAC,EAAYC,YAAYC,YAE/C,OACE,gBAACC,EAAA,EAAD,CAAMC,GAAI,CAAEC,MAAO,IAAKC,UAAW,MACjC,gBAACC,EAAA,EAAD,CAAKH,GAAI,CAAEI,QAAS,OAAQC,cAAe,SAAUC,IAAK,IACxD,gBAAC,EAAAC,EAAD,CACEb,MAAOA,EACPc,IAAG,UAAEf,EAAMG,YAAR,aAAE,EAAYC,YAAYY,iBAE/B,gBAACC,EAAA,EAAD,CACEV,GAAI,CACFW,OAAQ,MAGV,gBAACC,EAAA,GAAD,CACEC,WAAS,EACTb,GAAI,CACFI,QAAS,OACTC,cAAe,SACfS,eAAgB,kBAGlB,gBAACF,EAAA,GAAD,CAAMG,MAAI,GACR,gBAACZ,EAAA,EAAD,KACE,gBAACa,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,OAAhD,UACG1B,EAAMG,YADT,aACG,EAAYC,YAAYuB,SAI/B,gBAACR,EAAA,GAAD,CAAMG,MAAI,GACR,gBAACZ,EAAA,EAAD,KACE,gBAACa,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,UAAUC,UAAU,OAArD,wBACc1B,EAAMG,YADpB,aACc,EAAYC,YAAYwB,iBAI1C,gBAACT,EAAA,GAAD,CAAMG,MAAI,GACR,gBAACZ,EAAA,EAAD,CAAKH,GAAI,CAAEI,QAAS,OAAQE,IAAK,EAAGgB,SAAU,SAA9C,UACG7B,EAAMG,YADT,aACG,EAAYC,YAAY0B,KAAKC,KAAI,SAACC,GAAD,OAChC,gBAACT,EAAA,EAAD,CAAYU,IAAKD,EAAKP,QAAQ,WAA9B,IACIO,EAF4B,MAOtC,gBAACb,EAAA,GAAD,CAAMG,MAAI,GACR,gBAACZ,EAAA,EAAD,CACEH,GAAI,CACF2B,SAAU,SACVC,aAAc,aAGhB,gBAACZ,EAAA,EAAD,CAAYE,QAAQ,QAAQW,MAAM,kBAAlC,UACGpC,EAAMG,YADT,aACG,EAAYkC,UAMvB,gBAACC,EAAA,EAAD,CAAa/B,GAAI,CAAEgC,WAAY,UAC7B,gBAAC,EAAAC,KAAD,CAAMC,GAAE,oBAAWzC,EAAMG,YAAjB,aAAW,EAAYC,YAAYsC,OACzC,gBAACC,EAAA,EAAD,CAAQC,KAAK,SAAb,WAMX,E,UCAD,EAtEa,SAAC,GAAqB,IAC3BC,EAD0B,EAAlB1C,KACM2C,OAAOC,MAC3B,GAAwBC,EAAAA,EAAAA,UAASH,GAA1B1C,EAAP,KAAa8C,EAAb,KACMC,EAAK,CACT,OADS,eAEN,IAAIC,IAAIN,EAAMd,KAAI,SAACqB,GAAD,OAAUA,EAAKhD,YAAY0B,IAA3B,IAAiCuB,KAAK,MAoB7D,OACE,gCACE,gBAACC,EAAA,GAAD,MACA,gBAACC,EAAA,EAAD,CAAQC,UAAU,aAChB,gBAACC,EAAA,EAAD,CACEtD,KAAMA,EACN+C,MAAOA,EACPQ,YAxBY,SAACC,GAEjBV,EADW,QAATU,EACMd,EAEA,kBAAMA,EAAMe,QAAO,SAACC,GAAD,OAASA,EAAIzD,YAAY0B,KAAKgC,SAASH,EAAvC,GAAnB,EAEX,EAmBOI,aAjBa,SAACC,GACfA,GAAYf,EAAQJ,GACzBI,GAAQ,kBACNJ,EAAMe,QAAO,SAACC,GAAD,OACXA,EAAIxB,KAAK4B,cAAcH,SAASE,EAAWC,cADhC,GADP,GAKT,EAWO3D,KAAMA,KAKf,EAkCY4D,EAAO,kBAAM,gBAACC,EAAA,EAAD,CAAKxC,MAAM,QAAQyC,YAAY,cAArC,C","sources":["webpack://portfolio/./src/components/Card/BlogCard.js","webpack://portfolio/./src/pages/blog/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { getImage, GatsbyImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\n\nimport Card from \"@mui/material/Card\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { Box, Grid } from \"@mui/material\";\n\nconst BlogCard = (props) => {\n  const image = getImage(props.data?.frontmatter.hero_image);\n\n  return (\n    <Card sx={{ width: 345, maxHeight: 400 }}>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <GatsbyImage\n          image={image}\n          alt={props.data?.frontmatter.hero_image_alt}\n        />\n        <CardContent\n          sx={{\n            height: 250,\n          }}\n        >\n          <Grid\n            container\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Grid item>\n              <Box>\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                  {props.data?.frontmatter.title}\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item>\n              <Box>\n                <Typography gutterBottom variant=\"caption\" component=\"div\">\n                  Published: {props.data?.frontmatter.datePublished}\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item>\n              <Box sx={{ display: \"flex\", gap: 1, flexWrap: \"wrap\" }}>\n                {props.data?.frontmatter.tags.map((tag) => (\n                  <Typography key={tag} variant=\"caption\">\n                    #{tag}\n                  </Typography>\n                ))}\n              </Box>\n            </Grid>\n            <Grid item>\n              <Box\n                sx={{\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                }}\n              >\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {props.data?.body}\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardActions sx={{ background: \"white\" }}>\n          <Link to={`/blog/${props.data?.frontmatter.slug}`}>\n            <Button size=\"small\">Read</Button>\n          </Link>\n        </CardActions>\n      </Box>\n    </Card>\n  );\n};\n\nexport default BlogCard;\n","import React, { useState } from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../../components/Layout/Layout\";\nimport Gallery from \"../../components/Gallery/Gallery\";\nimport Card from \"../../components/Card/BlogCard\";\nimport { SEO } from \"../../components/SEO/SEO\";\n\nconst Blog = ({ data: _data }) => {\n  const BLOGS = _data.allMdx.nodes;\n  const [data, setData] = useState(BLOGS);\n  const chips = [\n    \"All\",\n    ...new Set(BLOGS.map((blog) => blog.frontmatter.tags).flat(1)),\n  ];\n\n  const filterChips = (chip) => {\n    if (chip === \"All\") {\n      setData(BLOGS);\n    } else {\n      setData(() => BLOGS.filter((obj) => obj.frontmatter.tags.includes(chip)));\n    }\n  };\n\n  const filterSearch = (searchTerm) => {\n    if (!searchTerm) setData(BLOGS);\n    setData(() =>\n      BLOGS.filter((obj) =>\n        obj.body.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    );\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <Layout pageTitle=\"Ramblings\">\n        <Gallery\n          data={data}\n          chips={chips}\n          filterChips={filterChips}\n          filterSearch={filterSearch}\n          Card={Card}\n        />\n      </Layout>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { fields: frontmatter___datePublished, order: DESC }) {\n      nodes {\n        id\n        body\n        frontmatter {\n          author\n          datePublished(formatString: \"MMMM D, YYYY\")\n          title\n          slug\n          tags\n          hero_image_alt\n          hero_image {\n            childImageSharp {\n              gatsbyImageData(\n                width: 400\n                height: 100\n                placeholder: BLURRED\n                formats: [AUTO, WEBP, AVIF]\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Blog;\n\n// eslint-disable-next-line\nexport const Head = () => <SEO title=\"Blogs\" description=\"Blogs Page\" />;\n"],"names":["props","image","getImage","data","frontmatter","hero_image","Card","sx","width","maxHeight","Box","display","flexDirection","gap","G","alt","hero_image_alt","CardContent","height","Grid","container","justifyContent","item","Typography","gutterBottom","variant","component","title","datePublished","flexWrap","tags","map","tag","key","overflow","textOverflow","color","body","CardActions","background","Link","to","slug","Button","size","BLOGS","allMdx","nodes","useState","setData","chips","Set","blog","flat","CssBaseline","Layout","pageTitle","Gallery","filterChips","chip","filter","obj","includes","filterSearch","searchTerm","toLowerCase","Head","SEO","description"],"sourceRoot":""}